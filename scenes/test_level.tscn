[gd_scene load_steps=19 format=2]

[ext_resource path="res://enviroments/default_env.tres" type="Environment" id=1]
[ext_resource path="res://scripts/ai_csharp/MasterMind.cs" type="Script" id=2]
[ext_resource path="res://scripts/ai_csharp/GroupMind.cs" type="Script" id=3]
[ext_resource path="res://scenes/ai/player_mind_template_full.tscn" type="PackedScene" id=4]
[ext_resource path="res://cam_debug.gd" type="Script" id=8]
[ext_resource path="res://scenes/crafts/corvette_artery.tscn" type="PackedScene" id=9]
[ext_resource path="res://scenes/crafts/test_fighter.tscn" type="PackedScene" id=10]
[ext_resource path="res://scenes/crafts/test_corvette.tscn" type="PackedScene" id=12]
[ext_resource path="res://scenes/human_prop.tscn" type="PackedScene" id=13]

[sub_resource type="CapsuleMesh" id=1]

[sub_resource type="CapsuleShape" id=2]

[sub_resource type="ViewportTexture" id=3]
flags = 4
viewport_path = NodePath("Enviroment/Planetoid/Viewport")

[sub_resource type="ViewportTexture" id=4]
flags = 4
viewport_path = NodePath("Enviroment/Planetoid/Viewport")

[sub_resource type="SpatialMaterial" id=5]
resource_local_to_scene = true
albedo_texture = SubResource( 3 )
metallic_specular = 1.0
roughness_texture = SubResource( 4 )
roughness_texture_channel = 3

[sub_resource type="SphereMesh" id=6]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;
render_mode blend_premul_alpha;

vec3 hash(vec3 p) {
	p = vec3(dot(p, vec3(127.1, 311.7, 74.7)),
	dot(p, vec3(269.5, 183.3, 246.1)),
	dot(p, vec3(113.5, 271.9, 124.6)));
	return -1.0 + 2.0 * fract(sin(p) * 43758.5453123);
}
float noise(vec3 p) {
	vec3 i = floor(p);
	vec3 f = fract(p);
	vec3 u = f * f * (3.0 - 2.0 * f);
	return mix(mix(mix(dot(hash(i+ vec3(0.0,0.0,0.0)), f - vec3(0.0, 0.0, 0.0)), dot(hash(i + vec3(1.0, 0.0, 0.0)), f - vec3(1.0, 0.0, 0.0)), u.x),  mix(dot(hash(i + vec3(0.0, 1.0, 0.0)), f - vec3(0.0, 1.0, 0.0)),                     dot(hash(i + vec3(1.0, 1.0, 0.0)), f - vec3(1.0, 1.0, 0.0)), u.x), u.y),             mix(mix(dot(hash(i + vec3(0.0, 0.0, 1.0)), f - vec3(0.0, 0.0, 1.0)),                     dot(hash(i + vec3(1.0, 0.0, 1.0)), f - vec3(1.0, 0.0, 1.0)), u.x),                 mix(dot(hash(i + vec3(0.0, 1.0, 1.0)), f - vec3(0.0, 1.0, 1.0)),                     dot(hash(i + vec3(1.0, 1.0, 1.0)), f - vec3(1.0, 1.0, 1.0)), u.x), u.y), u.z);
}

void fragment() {
	float theta = UV.y * 3.14159;
	float phi = UV.x * 3.14159 * 2.0;
	vec3 unit = vec3(0.0, 0.0, 0.0);
	unit.x = sin(phi) * sin(theta);
	unit.y = cos(theta) * -1.0;
	unit.z = cos(phi) * sin(theta);
	unit = normalize(unit);
	COLOR.xyz = unit;
	float n = noise(unit * 5.0) * 0.5;
	n += noise(unit * 10.0) * 0.25;
	n += noise(unit * 20.0) * 0.125;
	n += noise(unit * 40.0) * 0.0625;
	COLOR.xyz = mix(vec3(0.05, 0.3, 0.5), vec3(0.9, 0.4, 0.1),smoothstep(-0.1, 0.0, n));
	COLOR.a = 0.3 + 0.7 * smoothstep(-0.1, 0.0, n);
}"
custom_defines = ""

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )

[sub_resource type="CylinderMesh" id=9]
top_radius = 0.5
bottom_radius = 0.5

[node name="TestLevel" type="Spatial"]

[node name="Enviroment" type="Spatial" parent="."]

[node name="Capsule" type="Spatial" parent="Enviroment"]
transform = Transform( 10, 0, 0, 0, 10, 0, 0, 0, 10, 58.0971, 0, 221.331 )

[node name="Mesh" type="MeshInstance" parent="Enviroment/Capsule"]
mesh = SubResource( 1 )
material/0 = null

[node name="RigidBody" type="RigidBody" parent="Enviroment/Capsule"]
mode = 1

[node name="CollisionShape" type="CollisionShape" parent="Enviroment/Capsule/RigidBody"]
transform = Transform( 1, 2.98023e-08, -2.98023e-08, 0, 1, -2.98023e-08, 2.98023e-08, -5.96046e-08, 1, 4.11272e-06, 3.8147e-06, 0 )
shape = SubResource( 2 )

[node name="Planetoid" type="MeshInstance" parent="Enviroment"]
transform = Transform( 10000, -1.33333, 0, 1.33333, 10000, 0, 0, 0, 10000, 8000, 8000, 8000 )
material_override = SubResource( 5 )
mesh = SubResource( 6 )
material/0 = null

[node name="Viewport" type="Viewport" parent="Enviroment/Planetoid"]
size = Vector2( 1024, 512 )
transparent_bg = true
hdr = false
disable_3d = true
usage = 0

[node name="ColorRect" type="ColorRect" parent="Enviroment/Planetoid/Viewport"]
material = SubResource( 8 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="DirectionalLight" type="DirectionalLight" parent="Enviroment"]
transform = Transform( -0.670572, -0.305636, -0.675958, 0.0818995, -0.936117, 0.34202, -0.73731, 0.173989, 0.652765, 13.4328, 2.39977, -5.06032 )
shadow_enabled = true
shadow_bias = 1.0
directional_shadow_split_1 = 0.071
directional_shadow_depth_range = 1
directional_shadow_max_distance = 500.0

[node name="WorldEnvironment" type="WorldEnvironment" parent="Enviroment"]
environment = ExtResource( 1 )

[node name="HumanProp" parent="." instance=ExtResource( 13 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -25.595, 0, 0 )
visible = false

[node name="MasterMind" type="Node" parent="."]
script = ExtResource( 2 )

[node name="GroupMind" type="Node" parent="."]
script = ExtResource( 3 )

[node name="Artery" parent="GroupMind" instance=ExtResource( 9 )]
transform = Transform( -4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -55.5283, 0, 73.3256 )

[node name="PlayerMind" parent="." instance=ExtResource( 4 )]

[node name="TestFighter" parent="PlayerMind" instance=ExtResource( 10 )]
transform = Transform( -1, 0, -1.50996e-07, 0, 1, 0, 1.50996e-07, 0, -0.999999, -56.7883, 0, 82.3878 )

[node name="CameraFacingDebug" type="Spatial" parent="PlayerMind"]
transform = Transform( -0.92802, -0.372496, 0.00510959, -0.0897872, 0.236961, 0.967361, -0.361549, 0.897271, -0.25335, 0, 31.6774, 0 )
visible = false
script = ExtResource( 8 )
_camera_path = NodePath("")
direction = Vector3( 0, 1, 0 )

[node name="MeshInstance" type="MeshInstance" parent="PlayerMind/CameraFacingDebug"]
transform = Transform( 1.01821, -5.96046e-08, -1.19209e-07, -1.19209e-07, 2.38419e-07, -1.01821, -2.98023e-08, 6.08542, -7.45058e-08, 0.178415, 0.0701642, 6.25686 )
mesh = SubResource( 9 )
material/0 = null

[node name="TestCrvt" parent="." instance=ExtResource( 12 )]
